# Generated by Django 3.2.25 on 2025-05-20 03:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PatientPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(db_index=True, help_text="Corresponds to the patient's ID in the User/Patient service", max_length=100)),
                ('insurance_provider_company_id', models.CharField(db_index=True, help_text='ID of the InsuranceProviderCompany from insurance_provider_service', max_length=100)),
                ('policy_number', models.CharField(help_text="Patient's policy number with the insurer", max_length=100)),
                ('policy_holder_name', models.CharField(blank=True, help_text='Name of the primary policy holder if different from patient', max_length=255, null=True)),
                ('effective_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending_verification', 'Pending Verification'), ('expired', 'Expired')], default='pending_verification', max_length=30)),
                ('coverage_details', models.JSONField(blank=True, default=dict, help_text='e.g., {"deductible_total": 1000, "deductible_met": 200, "co_pay_percentage": 20, "out_of_pocket_max": 5000}')),
                ('verification_notes', models.TextField(blank=True, help_text='Notes from policy verification process', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Patient Insurance Policy',
                'verbose_name_plural': 'Patient Insurance Policies',
                'db_table': 'insurance_patient_policies',
                'ordering': ['patient_id', '-effective_date'],
                'unique_together': {('patient_id', 'insurance_provider_company_id', 'policy_number')},
            },
        ),
        migrations.CreateModel(
            name='InsuranceClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_transaction_id', models.CharField(db_index=True, help_text='ID of the PaymentTransaction from Payment Service', max_length=100, unique=True)),
                ('claim_submission_date', models.DateTimeField(auto_now_add=True, help_text='Date this claim was recorded in our system')),
                ('service_date_start', models.DateField(help_text='Start date when the healthcare service was rendered')),
                ('service_date_end', models.DateField(blank=True, help_text='End date for services spanning multiple days', null=True)),
                ('billed_amount', models.DecimalField(decimal_places=2, help_text='Total amount billed for the service/items by the healthcare provider', max_digits=12)),
                ('claimed_amount', models.DecimalField(decimal_places=2, help_text='Amount submitted to insurance for coverage (can be same as billed or adjusted)', max_digits=12)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount approved by the insurer', max_digits=12, null=True)),
                ('patient_responsibility_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Portion of the bill the patient is responsible for after insurance', max_digits=12, null=True)),
                ('status', models.CharField(choices=[('received', 'Received for Processing'), ('pending_submission_to_insurer', 'Pending Submission to External Insurer'), ('submitted_to_insurer', 'Submitted to External Insurer'), ('processing_by_insurer', 'Processing by External Insurer'), ('adjudicated_approved', 'Adjudicated - Approved by Insurer'), ('adjudicated_rejected', 'Adjudicated - Rejected by Insurer'), ('adjudicated_requires_info', 'Adjudicated - Requires More Information'), ('payment_processed_by_insurer', 'Payment Processed by Insurer'), ('closed_paid', 'Closed - Paid'), ('closed_rejected', 'Closed - Rejected'), ('error_processing', 'Error During Internal Processing'), ('error_submission', 'Error During Submission to Insurer')], default='received', max_length=40)),
                ('insurer_claim_reference_id', models.CharField(blank=True, db_index=True, help_text='Claim Reference ID from the external insurance company', max_length=100, null=True)),
                ('processing_notes', models.TextField(blank=True, help_text='Internal notes or notes from insurer during processing', null=True)),
                ('rejection_reason_code', models.CharField(blank=True, help_text='Standardized rejection code from insurer', max_length=50, null=True)),
                ('rejection_reason_description', models.TextField(blank=True, help_text='Detailed description of rejection reason', null=True)),
                ('claimed_items_details', models.JSONField(default=list, help_text='List of items/services claimed, e.g., from payment_transaction.transaction_details')),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_to_insurer_at', models.DateTimeField(blank=True, help_text='Timestamp when the claim was actually sent to the external insurer', null=True)),
                ('adjudication_completed_at', models.DateTimeField(blank=True, help_text='Timestamp when the insurer completed adjudication', null=True)),
                ('policy', models.ForeignKey(help_text='The patient policy this claim is against', on_delete=django.db.models.deletion.PROTECT, related_name='claims', to='insurance_service.patientpolicy')),
            ],
            options={
                'verbose_name': 'Insurance Claim',
                'verbose_name_plural': 'Insurance Claims',
                'db_table': 'insurance_service_claims',
                'ordering': ['-claim_submission_date'],
            },
        ),
    ]
