version: '3.8'

services:
  # MySQL for user services
  mysql:
    image: mysql:8.0
    container_name: healthcare_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: healthcare_users
      MYSQL_USER: healthcare
      MYSQL_PASSWORD: healthcare_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - healthcare_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "healthcare", "-phealthcare_password"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL for Pharmacy Service
  postgres:
    image: postgres:14
    container_name: healthcare_postgres
    restart: always
    environment:
      POSTGRES_DB: healthcare_pharmacy
      POSTGRES_USER: healthcare
      POSTGRES_PASSWORD: healthcare_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - healthcare_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U healthcare"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MongoDB for Medicine Service (no authentication for development)
  mongodb:
    image: mongo:6
    container_name: healthcare_mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - healthcare_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  healthcare_network:
    driver: bridge

volumes:
  mysql_data:
  postgres_data:
  mongodb_data:
